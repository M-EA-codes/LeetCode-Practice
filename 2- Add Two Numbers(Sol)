/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode* output=NULL;
        ListNode* temp=output;
        int num,carry=0,inp;
        while(l1!=NULL || l2!=NULL){
            
            if(l1!=NULL && l2!=NULL){
                inp=l1->val+l2->val+carry;
                num=inp;
                l1=l1->next;
                l2=l2->next;
            }
            else if(l1==NULL)
            {
                inp=l2->val+carry;
                num=inp;
                l2=l2->next;
            }
            else{
                inp=l1->val+carry;
                num=inp;
                l1=l1->next;
            }
                if(num>9)
                {
                    inp=num%10;
                }

            num/=10;
            carry=num;
            if(output==NULL)
            {
                output=new ListNode(inp,NULL);
                temp=output;
            }
            else{
                output->next=new ListNode(inp,NULL);
                output=output->next;
            }
        } 
        if(carry==1)
        {
            output->next=new ListNode(carry,NULL);
        }
        return temp;
    }
};
